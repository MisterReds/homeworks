# импортируем библиотеку pandas
import pandas as pd

# скачиваем датасет с данными о продажах домов
# для этого используем функцию pd.read_csv с указанием ссылки на датасет
# также указываем параметр sep=',', так как данные разделены запятой
df = pd.read_csv('Housing.csv', sep=',')

# выводим первые пять строк датафрейма для проверки
df.head()

# задаем вопросы и находим ответы с помощью функций pandas

# 1. Найдите количество спален в самом дешёвом доме. Если таких несколько, укажите наименьшее значение.
# для этого используем функцию df.min, которая возвращает минимальное значение по столбцу
# указываем столбец 'price' в квадратных скобках
min_price = df['price'].min()

# затем используем функцию df.query, которая фильтрует данные по заданному условию
# указываем условие 'price == min_price' в кавычках
# также используем функцию df['bedrooms'], которая возвращает столбец 'bedrooms'
min_bedrooms = df.query('price == @min_price')['bedrooms']

# далее используем функцию min_bedrooms.min, которая возвращает минимальное значение по столбцу 'bedrooms'
# выводим ответ на экран с помощью функции print
print(f'Количество спален в самом дешёвом доме: {min_bedrooms.min()}')

# 2. Найдите количество домов, в которых количество спален не больше количества ванных.
# для этого используем функцию df.query, которая фильтрует данные по заданному условию
# указываем условие 'bedrooms <= bathrooms' в кавычках
# также используем функцию df.shape, которая возвращает размер датафрейма в виде кортежа (строки, столбцы)
# берем первый элемент кортежа с помощью индекса [0], который соответствует количеству строк
num_houses = df.query('bedrooms <= bathrooms').shape[0]

# выводим ответ на экран с помощью функции print
print(f'Количество домов, в которых количество спален не больше количества ванных: {num_houses}')

# 3. Сколько стоит самый дешёвый дом с гостевой комнатой?
# для этого используем функцию df.query, которая фильтрует данные по заданному условию
# указываем условие 'guestroom == "yes"' в кавычках
# также используем функцию df['price'], которая возвращает столбец 'price'
# далее используем функцию df.min, которая возвращает минимальное значение по столбцу 'price'
min_price_guestroom = df.query('guestroom == "yes"')['price'].min()

# выводим ответ на экран с помощью функции print
print(f'Стоимость самого дешёвого дома с гостевой комнатой: {min_price_guestroom}')

# 4. Рассмотрим дома ценой от 5.000.000 или до 2.000.000 денег. Какая часть из них может похвастаться кондиционированием воздуха?
# для этого используем функцию df.query, которая фильтрует данные по заданному условию
# указываем условие '(price >= 5000000) | (price <= 2000000)' в кавычках
# оператор | означает логическое ИЛИ
# также используем функцию df.shape, которая возвращает размер датафрейма в виде кортежа (строки, столбцы)
# берем первый элемент кортежа с помощью индекса [0], который соответствует количеству строк
total_houses = df.query('(price >= 5000000) | (price <= 2000000)').shape[0]

# затем используем функцию df.query, которая фильтрует данные по заданному условию
# указываем условие '(price >= 5000000) | (price <= 2000000) & (airconditioning == "yes")' в кавычках
# оператор & означает логическое И
# также используем функцию df.shape, которая возвращает размер датафрейма в виде кортежа (строки, столбцы)
# берем первый элемент кортежа с помощью индекса [0], который соответствует количеству строк
airco_houses = df.query('(price >= 5000000) | (price <= 2000000) & (airconditioning == "yes")').shape[0]

# далее вычисляем долю домов с кондиционером от общего количества домов в заданном диапазоне цен
# для этого делим airco_houses на total_houses и умножаем на 100, чтобы получить проценты
# также используем функцию round, чтобы округлить результат до двух знаков после запятой
airco_ratio = round(airco_houses / total_houses * 100, 2)

# выводим ответ на экран с помощью функции print
print(f'Доля домов с кондиционером в заданном диапазоне цен: {airco_ratio}%')
